Id,
total = `Estimate; Total:`,
home_burdened =
`Estimate; Owner-occupied housing units: - Less than $20,000: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $20,000 to $34,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $35,000 to $49,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $50,000 to $74,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $75,000 or more: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - Zero or negative income`,
homeown = `Estimate; Owner-occupied housing units:`,
home_unburdened = homeown - home_burdened,
rent_burdened =
`Estimate; Renter-occupied housing units: - Less than $20,000: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $20,000 to $34,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $35,000 to $49,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $50,000 to $74,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $75,000 or more: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - Zero or negative income`,
rent = `Estimate; Renter-occupied housing units:`,
rent_unburdened = rent - rent_burdened,
burdened = home_burdened + rent_burdened,
rent_burdened_renters = rent_burdened / rent * 100,
home_burdened_homeowners = home_burdened / homeown * 100) %>%
#filter(Id2 != 21111980100) %>%
mutate_at(vars(home_burdened:burdened), funs(./total * 100)) %>%
select(-total)
map_data %<>% full_join(tenure_map)
map_data %<>% full_join(burdened_map)
map_tract@data <- full_join(map_tract@data, tenure_map, by = c('GEO_ID' = 'Id'))
map_tract@data <- full_join(map_tract@data, burdened_map, by = c('GEO_ID' = 'Id'))
make_map("homeownership",
name = "Homeownership",
legend_title = "Homeownership",
units = "Percent")
graph_trendline_change(
data,
'homeownership',
plot_title = "Burdened Households",
xmax = 2017)
tenure_white_00_pop <- read_csv("data/qop/DEC_00_SF1_H011I_with_ann.csv", skip = 1)
tenure_white_00_homes <- read_csv("data/qop/DEC_00_SF1_H012I_with_ann.csv", skip = 1)
tenure_white_05_17 <- acs_time('/data/qop/B25003H/')
tenure_white_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_white_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_white_00 <- bind_df(tenure_white_00_pop, tenure_white_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total_units = total_homes + total_apartments,
homeownership_white = total_homes / total_units)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_white = `Estimate; Owner occupied` / total * 100)
tenure_white <- bind_rows(tenure_white_00, tenure_white_05_17) %>%
weight_stl('homeownership_white', 'total')
tenure_black_00_pop <- read_csv("data/qop/DEC_00_SF1_H011B_with_ann.csv", skip = 1)
tenure_black_00_homes <- read_csv("data/qop/DEC_00_SF1_H012B_with_ann.csv", skip = 1)
tenure_black_05_17 <- acs_time('/data/qop/B25003B/')
tenure_black_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_black_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_black_00 <- bind_df(tenure_black_00_pop, tenure_black_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total_units = total_homes + total_apartments,
homeownership_black = total_homes / total_units)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_black = `Estimate; Owner occupied` / total * 100)
tenure_white <- bind_rows(tenure_black_00, tenure_black_05_17) %>%
weight_stl('homeownership_black', 'total')
tenure_black <- bind_rows(tenure_black_00, tenure_black_05_17) %>%
weight_stl('homeownership_black', 'total')
tenure_white_00_pop <- read_csv("data/qop/DEC_00_SF1_H011I_with_ann.csv", skip = 1)
tenure_white_00_homes <- read_csv("data/qop/DEC_00_SF1_H012I_with_ann.csv", skip = 1)
tenure_white_05_17 <- acs_time('/data/qop/B25003H/')
tenure_white_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_white_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_white_00 <- bind_df(tenure_white_00_pop, tenure_white_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total = total_homes + total_apartments,
homeownership_white = total_homes / total * 100)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_white = `Estimate; Owner occupied` / total * 100)
tenure_white <- bind_rows(tenure_white_00, tenure_white_05_17) %>%
weight_stl('homeownership_white', 'total')
tenure_black_00_pop <- read_csv("data/qop/DEC_00_SF1_H011B_with_ann.csv", skip = 1)
tenure_black_00_homes <- read_csv("data/qop/DEC_00_SF1_H012B_with_ann.csv", skip = 1)
tenure_black_05_17 <- acs_time('/data/qop/B25003B/')
tenure_black_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_black_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_black_00 <- bind_df(tenure_black_00_pop, tenure_black_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total = total_homes + total_apartments,
homeownership_black = total_homes / total * 100)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_black = `Estimate; Owner occupied` / total * 100)
tenure_black <- bind_rows(tenure_black_00, tenure_black_05_17) %>%
weight_stl('homeownership_black', 'total')
tenure_hisp <- acs_time('/data/qop/B25003I/')
tenure_hisp %<>%
mutate(
total = `Estimate; Total:`,
homeownership_hispanic = `Estimate; Owner occupied` / total * 100) %>%
weight_stl('homeownership_hispanic', 'total')
data %<>% bind_df(tenure_white, tenure_black, tenure_hisp)
data %<>% mutate(homeownership_gap_black = homeownership_white - homeownership_black)
rm(tenure_white, tenure_black, tenure_hisp)
names(tenure_white_00_pop)
rm(tenure_white, tenure_white_00, tenure_white_00_homes, tenure_white_00_pop, tenure_white_05_17,
tenure_black, tenure_black_00, tenure_black_00_homes, tenure_black_00_pop, tenure_black_05_17,
tenure_hisp)
graph_trendline_race_peer_two(
data,
vars = c('homeownership_white', 'homeownership_black'),
plot_title = 'Homeownership by Race',
rollmean = 3)
graph_trendline_race_peer_two(
data,
vars = c('homeownership_white', 'homeownership_black'),
plot_title = 'Homeownership by Race',
xmin = 2000
rollmean = 3)
graph_trendline_race_peer_two(
data,
vars = c('homeownership_white', 'homeownership_black'),
plot_title = 'Homeownership by Race',
xmin = 2000,
rollmean = 3)
tenure_black_00_pop <- read_csv("data/qop/DEC_00_SF1_H011B_with_ann.csv", skip = 1)
tenure_black_00_homes <- read_csv("data/qop/DEC_00_SF1_H012B_with_ann.csv", skip = 1)
tenure_black_05_17 <- acs_time('/data/qop/B25003B/')
tenure_black_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_black_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_black_00 <- bind_df(tenure_black_00_pop, tenure_black_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total = total_homes + total_apartments,
homeownership_black = total_homes / total * 100)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_black = `Estimate; Owner occupied` / total * 100)
View(tenure_map)
knitr::opts_knit$set(root.dir = "C:/Users/Harrison Kirby/Desktop/GLP/ccu18")
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, fig.showtext=TRUE)
#Data
library(glptools)
library(survey)
library(tidyverse)
library(magrittr)
library(feather)
library(labelled)
#Graphing
library(ggthemes)
library(classInt)
library(showtext)
library(reshape2)
library(rbokeh)
library(wesanderson)
library(kableExtra)
library(scales)
#Mapping
library(rgdal)
library(RColorBrewer)
library(leaflet)
#Make the dplyr select function the default over the plotly select function
select <- function(...){dplyr::select(...)}
font_add("Museo Sans 300", "MuseoSans_300.otf")
font_add("Museo Sans 300 Italic", "MuseoSans_300_Italic.otf")
#Tract Map
map_tract = readOGR('data/maps/tract', layer = "tract",
GDAL1_integer64_policy = TRUE, stringsAsFactors = FALSE, verbose = FALSE)
map_tract$TRACT <- as.numeric(map_tract$TRACT)
nh_names <- read_csv('data/maps/tract_to_nh.csv')
nh_names$Id2 <- substr(nh_names$Id2, 6, 13)
nh_names$Id2 <- as.numeric(nh_names$Id2)
map_tract@data <- full_join(map_tract@data, nh_names, by = c('TRACT' = 'Id2'))
map_tract@data$l_line1 <- paste("Tract #:", map_tract@data$TRACT, "in the")
map_tract@data$l_line2 <- paste(map_tract@data$Neighborhood, "neighborhood")
rm(nh_names)
#Zip Code map
map_zip = readOGR('data/maps/zip', layer = 'Jefferson_County_KY_ZIP_Codes',
GDAL1_integer64_policy = TRUE, stringsAsFactors = FALSE, verbose = FALSE)
map_zip$ZIPCODE <- as.numeric(map_zip$ZIPCODE)
map_zip@data$l_line1 <- paste0("Zip Code ", map_zip@data$ZIPCODE)
web = TRUE
#Tract Map
pop_00 <- read_csv('data/qop/population/DEC_00_SF1_P001_with_ann.csv', skip = 1)
pop_00 %<>%
mutate(TRACT00 = as.numeric(substr(Id2, 6, 11)),
year = 2000,
pop = Total) %>%
select(TRACT00, year, pop)
crosswalk <- read_csv('data/qop/crosswalk20002010.csv')
crosswalk %<>%
filter(STATE10 == 21 & COUNTY10 == 111) %>%
select(TRACT00 = TRACT00,
tract = TRACT10,
per = POPPCT00)
pop_00 <- left_join(crosswalk, pop_00)
pop_00 %<>%
mutate(pop = pop*per / 100) %>%
group_by(tract) %>%
summarise(pop =sum(pop)) %>%
ungroup() %>%
mutate(year = 2000)
rm(crosswalk)
pop_time <- function(folder, starting_year = 2010){
wd <- getwd()
directory <- paste0(wd, folder)
file_names <- list.files(directory)
n <- length(file_names)
y <- starting_year
for (i in 1:n){
file_path <- paste0(wd, folder, file_names[i])
data <- read_csv(file_path, skip = 1)
data$year <- y
y <- y + 1
if(i == 1){
df <- data
}
else{
names(data) <- names(df)
df <- rbind(df, data)
}
}
df
}
pop <- pop_time('/data/qop/population/B01003/')
pop %<>%
filter(year == 2016) %>%
mutate(pop = `Estimate; Total`) %>%
group_by(year) %>%
mutate(tract = as.numeric(substr(Id2, 6, 11))) %>%
ungroup %>%
select(tract, pop, year, Id)
tract_id <- pop %>% select(Id, tract)
pop_00 <- left_join(pop_00, tract_id)
pop <- bind_rows(pop_00, pop)
pop %<>%
group_by(year) %>%
mutate(total_pop = sum(pop, na.rm = TRUE)) %>%
ungroup() %>%
rename(population = pop) %>%
group_by(Id) %>%
mutate(population_change = (population - first(population)) / first(population) * 100,
population_change_adj = population_change - ((total_pop - first(total_pop))/first(total_pop) * 100)) %>%
ungroup() %>%
filter(year == 2016)
pop$population_change_scale <- pop$population_change
pop$population_change_scale[pop$population_change > 100] <- NA
pop$population_change_adj_scale <- pop$population_change_adj
pop$population_change_adj_scale[pop$population_change_adj > 100] <- NA
map_data <- pop
map_tract@data <- full_join(map_tract@data, pop, by = c('GEO_ID' = 'Id'))
rm(tract_id, pop_00, pop)
make_map("population_change",
name = "Population Change",
legend_title = "Population Change",
units = "Percent",
map_style = "divergent",
continuous = FALSE)
commute <- read_csv('data/qop/ACS_16_5YR_B08303_with_ann.csv', skip = 1)
commute %<>%
mutate(
total = `Estimate; Total:`) %>%
transmute(
Id,
fourtyfive_to_59 = `Estimate; Total: - 45 to 59 minutes` / total * 100,
sixty_to_89 = `Estimate; Total: - 60 to 89 minutes` / total * 100,
ninety_plus = `Estimate; Total: - 90 or more minutes` / total * 100,
extreme_commute = sixty_to_89 + ninety_plus,
long_commute = extreme_commute + fourtyfive_to_59)
map_tract@data <- full_join(map_tract@data, commute, by = c('GEO_ID' = 'Id'))
make_map("extreme_commute",
name = "Commute over 2 hours",
legend_title = "Commute <br>> 2 hours",
units = "Percent")
tenure_00 <- read_csv("data/qop/DEC_00_SF3_H007_with_ann.csv", skip = 1)
tenure_05_17 <- acs_time('/data/qop/B25003/')
tenure_00 %<>%
mutate(
FIPS = as.numeric(Id2),
year = 2000,
total = `Total:`,
homeownership = `Owner occupied` / total * 100)
tenure_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership = `Estimate; Owner occupied` / total * 100)
tenure <- bind_rows(tenure_00, tenure_05_17) %>%
weight_stl('homeownership', 'total')
data <- tenure
data %<>% pull_peers_FIPS() %>% select(FIPS, city, year, current, baseline, everything())
rm(tenure, tenure_00, tenure_05_17)
rank_and_nb_group(data[data$year == 2017,],
'homeownership',
plot_title = 'Homeownership, 2017')
graph_trendline(
data,
'homeownership',
'Homeownership',
xmin = 2000,
xmax = 2017)
tenure_map <- read_csv('data/qop/ACS_16_5YR_B25003_with_ann.csv', skip = 1)
tenure_map %<>%
mutate(
homeownership = `Estimate; Total: - Owner occupied` / `Estimate; Total:` * 100) %>%
select(Id, homeownership)
burdened_map <- read_csv('data/qop/ACS_16_5YR_B25106_with_ann.csv', skip = 1)
burdened_map %<>%
transmute(
Id,
total = `Estimate; Total:`,
home_burdened =
`Estimate; Owner-occupied housing units: - Less than $20,000: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $20,000 to $34,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $35,000 to $49,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $50,000 to $74,999: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - $75,000 or more: - 30 percent or more` +
`Estimate; Owner-occupied housing units: - Zero or negative income`,
homeown = `Estimate; Owner-occupied housing units:`,
home_unburdened = homeown - home_burdened,
rent_burdened =
`Estimate; Renter-occupied housing units: - Less than $20,000: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $20,000 to $34,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $35,000 to $49,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $50,000 to $74,999: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - $75,000 or more: - 30 percent or more` +
`Estimate; Renter-occupied housing units: - Zero or negative income`,
rent = `Estimate; Renter-occupied housing units:`,
rent_unburdened = rent - rent_burdened,
burdened = home_burdened + rent_burdened,
rent_burdened_renters = rent_burdened / rent * 100,
home_burdened_homeowners = home_burdened / homeown * 100) %>%
#filter(Id2 != 21111980100) %>%
mutate_at(vars(home_burdened:burdened), funs(./total * 100)) %>%
select(-total)
map_data %<>% full_join(tenure_map)
map_data %<>% full_join(burdened_map)
map_tract@data <- full_join(map_tract@data, tenure_map, by = c('GEO_ID' = 'Id'))
map_tract@data <- full_join(map_tract@data, burdened_map, by = c('GEO_ID' = 'Id'))
make_map("homeownership",
name = "Homeownership",
legend_title = "Homeownership",
units = "Percent")
graph_trendline_change(
data,
'homeownership',
plot_title = "Burdened Households",
xmax = 2017)
tenure_white_00_pop <- read_csv("data/qop/DEC_00_SF1_H011I_with_ann.csv", skip = 1)
tenure_white_00_homes <- read_csv("data/qop/DEC_00_SF1_H012I_with_ann.csv", skip = 1)
tenure_white_05_17 <- acs_time('/data/qop/B25003H/')
tenure_white_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_white_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_white_00 <- bind_df(tenure_white_00_pop, tenure_white_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total = total_homes + total_apartments,
homeownership_white = total_homes / total * 100)
tenure_white_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_white = `Estimate; Owner occupied` / total * 100)
tenure_white <- bind_rows(tenure_white_00, tenure_white_05_17) %>%
weight_stl('homeownership_white', 'total')
tenure_black_00_pop <- read_csv("data/qop/DEC_00_SF1_H011B_with_ann.csv", skip = 1)
tenure_black_00_homes <- read_csv("data/qop/DEC_00_SF1_H012B_with_ann.csv", skip = 1)
tenure_black_05_17 <- acs_time('/data/qop/B25003B/')
tenure_black_00_pop %<>%
transmute(
FIPS = Id2,
year = 2000,
homeown_pop = `Owner occupied`,
renting_pop = `Renter occupied`)
tenure_black_00_homes %<>%
transmute(
FIPS = Id2,
year = 2000,
avg_home_size = `Owner occupied`,
avg_rent_size = `Renter occupied`)
tenure_black_00 <- bind_df(tenure_black_00_pop, tenure_black_00_homes) %>%
mutate(
FIPS = as.numeric(FIPS),
total_homes = homeown_pop / avg_home_size,
total_apartments = renting_pop / avg_rent_size,
total = total_homes + total_apartments,
homeownership_black = total_homes / total * 100)
tenure_black_05_17 %<>%
mutate(
total = `Estimate; Total:`,
homeownership_black = `Estimate; Owner occupied` / total * 100)
tenure_black <- bind_rows(tenure_black_00, tenure_black_05_17) %>%
weight_stl('homeownership_black', 'total')
tenure_hisp <- acs_time('/data/qop/B25003I/')
tenure_hisp %<>%
mutate(
total = `Estimate; Total:`,
homeownership_hispanic = `Estimate; Owner occupied` / total * 100) %>%
weight_stl('homeownership_hispanic', 'total')
data %<>% bind_df(tenure_white, tenure_black, tenure_hisp)
data %<>% mutate(homeownership_gap_black = homeownership_white - homeownership_black)
rm(tenure_white, tenure_white_00, tenure_white_00_homes, tenure_white_00_pop, tenure_white_05_17,
tenure_black, tenure_black_00, tenure_black_00_homes, tenure_black_00_pop, tenure_black_05_17,
tenure_hisp)
graph_trendline_race_peer_two(
data,
vars = c('homeownership_white', 'homeownership_black'),
plot_title = 'Homeownership by Race',
xmin = 2000,
rollmean = 3)
graph_trendline_race_peer_two(
data,
vars = c('homeownership_white', 'homeownership_black'),
plot_title = 'Homeownership by Race',
rollmean = 3)
setwd('C:/Users/Harrison Kirby/Desktop/GLP/ccu18/docs')
rmarkdown::render_site()
setwd('C:/Users/Harrison Kirby/Desktop/GLP/ccu18/docs')
rmarkdown::render_site()
setwd('C:/Users/Harrison Kirby/Desktop/GLP/ccu18/docs')
rmarkdown::render_site()
setwd('C:/Users/Harrison Kirby/Desktop/GLP/ccu18/docs')
rmarkdown::render_site()
library(roxygen2)
library(devtools)
getwd()
setwd("../../glptools")
document()
setwd("..")
install("glptools")
library(glptools)
