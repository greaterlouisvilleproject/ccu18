setwd("data/health/natality")
natality <- wonder_time("2003-2006", "FIPS")
natality <- rbind(natality, wonder_time("2007-2016", "FIPS"))
natality <- natality %>%
select(year = Year, weight = `Birth Weight 12 Code`, births = Births, FIPS) %>%
mutate(weight = as.numeric(weight), births = as.numeric(births), FIPS = as.numeric(FIPS))
natality$underweight <- if_else(natality$weight <= 5, 1, 0)
natality <- natality %>%
group_by(FIPS, year, underweight) %>%
summarise(babies = sum(births, na.rm = TRUE)) %>%
ungroup() %>%
group_by(FIPS, year) %>%
mutate(pct_underweight = babies / sum(babies) * 100) %>%
ungroup() %>%
filter(underweight == 1) %>%
select(-underweight, -babies)
natality$FIPS[natality$FIPS == 29189] <- "MERGED"
setwd("data/health/natality")
#Race
natality_race_03_05 <- read_tsv('Natality, 2003-2006.txt')
natality_race_07_16 <- read_tsv('Natality, 2007-2016.txt')
natality_race <- rbind(natality_race_03_05, natality_race_07_16)
natality_race <- natality_race %>%
filter(!is.na(Year)) %>%
rename(FIPS = `County Code`) %>%
select(year = Year,
race = `Bridged Race`,
weight = `Birth Weight 12 Code`,
births = Births, FIPS) %>%
mutate(weight = as.numeric(weight),
births = as.numeric(births),
FIPS = as.numeric(FIPS),
race = replace(race, race == "Black or African American", "black"),
race = replace(race, race == "White", "white"),
race = replace(race, race == "Asian or Pacific Islander", "API"),
race = replace(race, race == "American Indian or Alaska Native", "AIAN"))
natality_race$underweight <- if_else(natality_race$weight <= 5, 1, 0)
natality_race <- natality_race %>%
group_by(FIPS, year, underweight, race) %>%
summarise(babies = sum(births, na.rm = TRUE)) %>%
ungroup() %>%
#weight STL
mutate(FIPS = replace(FIPS, FIPS == '29189' | FIPS == '29510', 'MERGED')) %>%
group_by(FIPS, year, underweight, race) %>%
summarise(
babies = sum(babies, na.rm = TRUE)) %>%
ungroup() %>%
group_by(FIPS, year) %>%
mutate(pct_underweight = babies / sum(babies) * 100) %>%
ungroup() %>%
filter(underweight == 1) %>%
select(-underweight, -babies) %>%
filter(race == "white" | race == "black") %>%
{
x <- .
full_join(
x %>%
filter(race == "white") %>%
select(-race) %>%
rename(pct_underweight_white = pct_underweight),
x %>%
filter(race == "black") %>%
select(-race) %>%
rename(pct_underweight_black = pct_underweight),
by = c("FIPS", "year"))
}
natality %<>%
bind_df(natality_race) %>%
select(FIPS, year, everything())
rm(natality_race_03_05, natality_race_07_16, natality_race)
mortality_one <- read_tsv("data/health/mortality/one.txt")
mortality_suppressed <- wonder_time_single("data/health/mortality/single-year")
#one-year mortality data
mortality_one %<>%
filter(!is.na(Year)) %>%
select(
FIPS = `County Code`,
year = Year,
age = `Single-Year Ages Code`,
deaths = Deaths,
population = Population) %>%
mutate(
age = as.numeric(age),
deaths = as.numeric(deaths),
population = as.numeric(population)) %>%
filter(age < 75)
#Calculate supressed death numbers
mortality_50 <- mortality_one %>%
filter(age == 50) %>%
rename(deaths50 = deaths) %>%
select(FIPS, year, deaths50)
mortality_suppressed %<>%
select(
FIPS = `County Code`,
year = Year,
deaths = Deaths,
age) %>%
left_join(mortality_50, by = c("FIPS", "year")) %>%
mutate(deaths_suppressed = deaths - deaths50) %>%
select(FIPS, year, age, deaths_suppressed)
#add to mortality data frame
mortality_one %<>% left_join(mortality_suppressed, by = c("FIPS", "year", "age"))
mortality_one %<>%
{
x <- .
bind_rows(
x %>%
filter(!is.na(deaths)),
x %>%
filter(is.na(deaths)) %>%
mutate(deaths = deaths_suppressed))
}
#Adjust to US 2000 standard population
std_pop <- read_table('C:/Users/Harrison Kirby/Desktop/GLP/ccu18/data/health/stdpop.singleagesthru84.txt',
col_names = FALSE)
std_pop %<>%
transmute(geography = str_sub(X1, 1, 3),
age = str_sub(X1, 4, 6),
pop = str_sub(X1, 7)) %>%
mutate_all(as.numeric) %>%
filter(geography == 202 & age < 75) %>%
mutate(age_pct_std = pop / sum(pop)) %>%
select(age, age_pct_std)
mortality <- mortality_one %>%
left_join(std_pop) %>%
group_by(FIPS, year) %>%
mutate(age_pct = population / sum(population)) %>%
mutate(population = population * age_pct_std / age_pct,
deaths = deaths * age_pct_std / age_pct) %>%
ungroup()
#YPLL Calculation
mortality <- mortality %>%
mutate(years_lost = 75 - age,
year_loss = years_lost * deaths)
mortality <- mortality %>%
group_by(year, FIPS) %>%
mutate(total_population = sum(population, na.rm = TRUE)) %>%
filter(age < 75) %>%
mutate(total_ypll = sum(year_loss, na.rm = TRUE),
ypll = total_ypll / (total_population / 100000)) %>%
ungroup() %>%
filter(age == 0) %>%
select(FIPS, year, ypll)
mortality %<>%
mutate(FIPS = as.numeric(FIPS)) %>%
weight_stl("ypll")
rm(mortality_50, mortality_suppressed)
#read in single-year race mortality data
mortality_one_race <- read_tsv("data/health/mortality/one_race.txt")
#clean data frame
mortality_one_race %<>%
filter(!is.na(Year)) %>%
transmute(
FIPS = `County Code`,
year = Year,
age = `Single-Year Ages Code`,
race = Race,
race = replace(race, race == "Black or African American", "black"),
race = replace(race, race == "White", "white"),
population = as.numeric(Population),
deaths = as.numeric(Deaths))
#create new data frame from mortality_one containing one row for each combination of FIPS, year, and race. Then add existing data from mortlity_one_race
mortality_race <- mortality_one %>%
select(FIPS, year, age) %>%
{
x <- .
bind_rows(
x %>% mutate(race = "black"),
x %>% mutate(race = "white"))
} %>%
left_join(mortality_one_race, by = c("FIPS", "year", "age", "race")) %>%
{
x <- .
full_join(
x %>%
filter(race == "white") %>%
select(-race) %>%
rename(pop_white = population, deaths_white = deaths),
x %>%
filter(race == "black") %>%
select(-race) %>%
rename(pop_black = population, deaths_black = deaths),
by = c("FIPS", "year", "age"))
}
#read in mortality data for white and black residents that is not broken down by race, then clean data frame and add to mortality_race
mortality_one_totals <- read_tsv("data/health/mortality/total_race.txt")
mortality_one_totals %<>%
filter(!is.na(Year)) %>%
transmute(
FIPS = `County Code`,
year = Year,
age = as.numeric(`Single-Year Ages Code`),
pop_tot = as.numeric(Population),
deaths_tot = as.numeric(Deaths))
mortality_race %<>%
left_join(mortality_one_totals, by = c("FIPS", "year", "age"))
#Fill any missing white values for age 74 using totals and data for black residents
mortality_race %<>%
{
x <- .
bind_rows(
x %>%
filter(is.na(pop_white) & age == 74) %>%
mutate(
pop_white = pop_tot - pop_black,
deaths_white = deaths_tot - deaths_black),
x %>%
filter(!(is.na(pop_white) & age == 74)))
}
#Read in death rates for ages added to death rates for age 74
mortality_tot_suppressed <- wonder_time_single("data/health/mortality/single-year whiteblack")
#filter mortality_race to age 74
mortality_74 <- mortality_race %>%
filter(age == 74) %>%
rename(deaths74 = deaths_tot,
pop74 = pop_tot) %>%
select(FIPS, year, deaths74, pop74)
#add to new totals dataframe and subtract deaths for ages 74 from deaths for age 74 plus each other age to create variables for surpressed population andd death counts
mortality_tot_suppressed %<>%
select(
FIPS = `County Code`,
year = Year,
age,
deaths = Deaths,
pop = Population) %>%
left_join(mortality_74, by = c("FIPS", "year")) %>%
mutate(
deaths = as.numeric(deaths),
deaths_tot_suppressed = deaths - deaths74,
pop_tot_suppressed = pop - pop74) %>%
select(FIPS, year, age, deaths_tot_suppressed, pop_tot_suppressed)
#add to mortality data frame
mortality_race %<>% left_join(mortality_tot_suppressed, by = c("FIPS", "year", "age"))
#replace NA values with calculated values
mortality_race %<>%
{
x <- .
bind_rows(
x %>%
filter(!is.na(deaths_tot)),
x %>%
filter(is.na(deaths_tot)) %>%
mutate(deaths_tot = deaths_tot_suppressed,
pop_tot = pop_tot_suppressed))
} %>%
select(-deaths_tot_suppressed, -pop_tot_suppressed)
#repeat the process for white residents.
#read in white data
mortality_white_suppressed <- wonder_time_single("data/health/mortality/single-year white")
#subset mortality_race to 74 year olds
mortality_74 <- mortality_race %>%
filter(age == 74) %>%
rename(deaths74 = deaths_white,
pop74 = pop_white) %>%
select(FIPS, year, deaths74, pop74)
#add to new totals dataframe and subtract deaths for ages 74 from deaths for age 74 plus each other age to create variables for surpressed population andd death counts
mortality_white_suppressed %<>%
select(
FIPS = `County Code`,
year = Year,
age,
deaths = Deaths,
pop = Population) %>%
mutate(age = age - 1) %>%
left_join(mortality_74, by = c("FIPS", "year")) %>%
mutate(
deaths = as.numeric(deaths),
deaths_white_suppressed = deaths - deaths74,
pop_white_suppressed = pop - pop74) %>%
select(FIPS, year, age, deaths_white_suppressed, pop_white_suppressed)
#add to mortality data frame
mortality_race %<>% left_join(mortality_white_suppressed, by = c("FIPS", "year", "age"))
#replace NA values with calculated values, calculate black values based on complete white and total columns
mortality_race %<>%
{
x <- .
bind_rows(
x %>%
filter(!is.na(deaths_white)),
x %>%
filter(is.na(deaths_white)) %>%
mutate(deaths_white = deaths_white_suppressed,
pop_white = pop_white_suppressed))
} %>%
select(-deaths_white_suppressed, -pop_white_suppressed)
#Clean data frame
mortality_race %<>%
transmute(
FIPS, year, age,
population_white = pop_white,
population_black = pop_black,
deaths_white,
deaths_black)
#YPLL Calculation
mortality_race <- mortality_race %>%
mutate(years_lost = 75 - age,
year_loss_white = years_lost * deaths_white,
year_loss_black = years_lost * deaths_black)
mortality_race <- mortality_race %>%
group_by(year, FIPS) %>%
mutate(
total_population_white = sum(population_white, na.rm = TRUE),
total_population_black = sum(population_black, na.rm = TRUE)) %>%
filter(age < 75) %>%
mutate(
total_ypll_white = sum(year_loss_white, na.rm = TRUE),
total_ypll_black = sum(year_loss_black, na.rm = TRUE),
ypll_white = total_ypll_white / (total_population_white / 100000),
ypll_black = total_ypll_black / (total_population_black / 100000)) %>%
ungroup() %>%
filter(age == 0) %>%
select(FIPS, year, ypll_white, ypll_black)
mortality_race %<>%
mutate(FIPS = as.numeric(FIPS)) %>%
weight_stl(c("ypll_white", "ypll_black"))
mortality %<>% bind_df(mortality_race)
rm(mortality_74, mortality_age, mortality_one, mortality_one_race, mortality_one_totals, mortality_ten, mortality_tot_suppressed, mortality_white_suppressed, mortality_race)
brfss_results <- read_feather("data/health/brfss_results_basic.feather")
brfss_results_race <- read_feather("data/health/brfss_results.feather")
brfss_results <- full_join(brfss_results, brfss_results_race, by = c("MSA", "year")) %>% select(-city)
brfss_results %<>%
mutate(poor_or_fair = poor_or_fair * 100)
rm(brfss_results_race)
msa_fips <- read_csv('data/MSA to FIPS.csv') %>% select(-city) %>% mutate(FIPS = as.character(FIPS))
natality <- left_join(natality, msa_fips)
#Create index
health_index <- full_join(mortality, natality, by = c("FIPS", "year"))
health_index <- full_join(health_index, brfss_results, by = c("MSA", "year"))
health_index <- health_index %>%
pull_peers_FIPS() %>%
filter(current == 1) %>%
select(-MSA) %>%
select(FIPS, year, city, current, baseline, everything())
#Create index
norm_z <- function(x){
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
health_z <- health_index
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, normz)
#Create index
norm_z <- function(x){
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, normz)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, funs(normz))
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, norm_z)
<-
#Create index
norm_z <- function(x){
if(mean(is.na(x)) == 1){
NA
}
else{
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
}
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, norm_z)
3
#Create index
norm_z <- function(x){
if(mean(is.na(x)) == 1){
3
}
else{
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
}
health_z <- health_z %>%
group_by(year) %>%
mutate_at(6:23, norm_z)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:23), norm_z)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:23), funs(norm_z))
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:23), funs(norm_z))
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:10), norm_z)
#Create index
norm_z <- function(x){
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:22), norm_z)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:22), norm_z) %>%
ungroup()
health_z <- health_index
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(6:22), norm_z) %>%
ungroup()
View(health_z)
health_z <- health_index
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
ungroup()
health_z <- health_index %>% filter(current == 1)
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
ungroup() %>%
rename_at(vars(6:23), paste_0(., "_index"))
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
ungroup() %>%
rename_at(vars(6:23), paste0(., "_index"))
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_z <- health_index %>% filter(current == 1)
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
mutate_at(vars(5:22), . * -1) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
#mutate_at(vars(5:22), . * -1) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_z <- health_index %>% filter(current == 1)
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), funs(norm_z, function(x){x * -1})) %>%
#mutate_at(vars(5:22), . * -1) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
mutate_at(vars(5:22), funs(. * -1)) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_index <- full_join(mortality, natality, by = c("FIPS", "year"))
health_index <- full_join(health_index, brfss_results, by = c("MSA", "year"))
health_index <- health_index %>%
pull_peers_FIPS() %>%
select(-MSA) %>%
select(FIPS, year, city, current, baseline, everything())
#Create index
norm_z <- function(x){
z <- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
}
health_z <- health_index %>% filter(current == 1)
health_z <- map_df(health_z, remove_var_label)
health_z <- health_z %>%
group_by(year) %>%
mutate_at(vars(5:22), norm_z) %>%
mutate_at(vars(5:22), funs(. * -1)) %>%
ungroup() %>%
rename_at(vars(6:23), paste0, "_index")
health_z <- health_z %>%
mutate(
health_index =
ypll_index * .5 +
pct_underweight_index * .2 +
poor_or_fair_index * .1 +
physdays_index * .1 +
mentdays_index * .1,
health_index_white =
ypll_white_index * .5 +
pct_underweight_white_index * .2 +
poor_or_fair_white_index * .1 +
physdays_white_index * .1 +
mentdays_white_index * .1,
health_index_black =
ypll_black_index * .5 +
pct_underweight_black_index * .2 +
poor_or_fair_black_index * .1 +
physdays_black_index * .1 +
mentdays_black_index * .1)
data <- health_z
graph_trendline(
data,
"health_index",
plot_title = "Health Index",
rollmean = 3)
graph_trendline_race_peer_two(
data,
vars = c('health_index_white', "health_index_black"),
plot_title = "Health Index by Race",
xmin = 2000,
rollmean = 3)
